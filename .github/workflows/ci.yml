name: Multi-Stage CI/CD Pipeline with Coverage & Issue Auto-Report

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # === 1️⃣ Build Job ===
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist/

  # === 2️⃣ Unit Test Job ===
  test-unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install --include=dev
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          npm run test:unit || (echo "❌ Unit tests failed" && exit 1)

  # === 3️⃣ Integration Test Job ===
  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test-unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install --include=dev
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Run integration tests
        run: |
          echo "Running integration tests..."
          npm run test:integration || (echo "❌ Integration tests failed" && exit 1)

      # === ✅ Upload Coverage Report ===
      - name: Upload test coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      # === ⚠️ Auto-create Issue on failure ===
      - name: Create issue when tests fail
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "❌ Integration Tests Failed in Run #${{ github.run_number }}" \
            --body "The integration tests failed in workflow run #${{ github.run_number }}. Please review the logs here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  # === 4️⃣ Deploy to Staging ===
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test-integration
    environment:
      name: staging
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Create Staging Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: staging-${{ github.run_number }}
          name: "Staging Release #${{ github.run_number }}"
          body: "This is an automated staging release after successful tests."
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # === 5️⃣ Deploy to Production (Manual Approval) ===
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://github.com/AndyTaoTao/activity-log
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
      - name: Create Production Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: prod-${{ github.run_number }}
          name: "Production Release #${{ github.run_number }}"
          body: "Production release after manual approval."
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
